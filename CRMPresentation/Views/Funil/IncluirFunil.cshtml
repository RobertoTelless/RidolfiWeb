@using Presentation.Extensions
@model ERP_Condominios_Solution.ViewModels.FunilViewModel
@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="page-title">
        <h3 class="title">Funis de Processos</h3>
        <br />
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("CarregarBase", "BaseAdmin")">Dashboard</a>
            </li>
            <li>
                <a href="@Url.Action("MontarTelaDashboardCRMNovo", "CRM")">Dashboard</a>
            </li>
            <li>
                <a href="@Url.Action("MontarTelaFunil", "Funil")">Funis de Processos</a>
            </li>
            <li class="active">
                <strong>Funis de Processos - Inclusão</strong>
            </li>
        </ol>
        <br />
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12">
            <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Funis de Processos - Inclusão</h5>
                </div>
                <div class="ibox-content">
                    @if (!ViewData.ModelState.IsValid)
                    {
        <div class="alert alert-danger">
            <button type="button" class="close" data-dismiss="alert">Fechar</button>
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        </div>}
                    <div id="alertContainer"></div>
                    <div class="tabs-container">
                        @using (Html.BeginForm("IncluirFunil", "Funil", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id = "pwd-container1" }))
                        {
                            <div class="form-group">
                                @Html.ButtonActionSubmit(text: "Confirma e prossegue a inclusão de Funil", htmlAttributes: new { id = "basictoast" })
                                @Html.ButtonLinkIndex(text: "Voltar", action: "VoltarBaseFunil", controller: "Funil")
                            </div>
                            <ul class="nav nav-tabs">
                                <li class="active"><a data-toggle="tab" href="#tab-1">Dados Gerais</a></li>
                            </ul>
                                            <div class="tab-content">

                                                @*Dados Gerais*@
                                                <div id="tab-1" class="tab-pane active">
                                                    <div class="panel-body">
                                                        <div class="row">
                                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">
                                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                                    @Html.HiddenFor(m => m.ASSI_CD_ID)
                                                                    @Html.HiddenFor(m => m.FUNI_DT_CADASTRO)
                                                                    @Html.HiddenFor(m => m.FUNI_IN_ATIVO)
                                                                    @Html.HiddenFor(m => m.FUNI_IN_FIXO)
                                                                    @Html.HiddenFor(m => m.FUNI_IN_TIPO)
                                                                    @Html.HiddenFor(m => m.FUNI_IN_CLIENTE)
                                                                    Nome*
                                                                    @Html.TextBoxFor(m => m.FUNI_NM_NOME, new { @class = "form-control", autofocus = true })
                                                                    @Html.ValidationMessageFor(m => m.FUNI_NM_NOME, "", new { @style = "color:red" })
                                                                </div>
                                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                                    Sigla*
                                                                    @Html.TextBoxFor(m => m.FUNI_SG_SIGLA, new { @class = "form-control", autofocus = true })
                                                                    @Html.ValidationMessageFor(m => m.FUNI_SG_SIGLA, "", new { @style = "color:red" })
                                                                </div>
                                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                                    Processo com geração de proposta?
                                                                    <br />
                                                                    @Html.CheckBoxFor(m => m.Proposta, new { @class = "checkbox i-checks", autofocus = true })
                                                                </div>                                                
                                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                                    Notificação para Responsável?
                                                                    <br />
                                                                    @Html.CheckBoxFor(m => m.Responsavel, new { @class = "checkbox i-checks", autofocus = true })
                                                                </div>                                                
                                                            </div>
                                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">
                                                                <div class="col-lg-12 col-md-12 col-xs-12">
                                                                    Descrição
                                                                    @Html.TextAreaFor(m => m.FUNI_DS_DESCRICAO, new { @class = "form-control", style = "width: 100%; height: 100px;", autofocus = true })
                                                                    @Html.ValidationMessageFor(m => m.FUNI_DS_DESCRICAO, "", new { @style = "color:red" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />  
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
    @Styles.Render("~/plugins/toastrStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/sparkline")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/sweetAlert")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>
        <script type="text/javascript">
            $(function () {
                $("#cnpj").mask("99.999.999/9999-99");
                $("#cep").mask("99999-999");
                $("#cpf").mask("999.999.999-99");
                $('#tel').mask("(99) 9999-9999");
                $('#cel').mask("(99) 99999-9999");
            });
        </script>
        <script type="text/javascript">
            $(document).ready(function () {

                $('.i-checks').iCheck({
                    checkboxClass: 'icheckbox_square-green',
                    radioClass: 'iradio_square-green',
                });

            });
        </script>
        <script type="text/javascript">
            $(document).ready(function () {

                var i = -1;
                var toastCount = 0;
                var $toastlast;
                var getMessage = function () {
                    var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
                    return msg;
                };

                $('#basictoast').click(function () {
                    // Display a success toast, with a title
                    toastr.success('Inclusão em andamento!')
                });
                $('#showtoast').click(function () {
                    var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
                    var msg = $('#message').val();
                    var title = $('#title').val() || '';
                    var $showDuration = $('#showDuration');
                    var $hideDuration = $('#hideDuration');
                    var $timeOut = $('#timeOut');
                    var $extendedTimeOut = $('#extendedTimeOut');
                    var $showEasing = $('#showEasing');
                    var $hideEasing = $('#hideEasing');
                    var $showMethod = $('#showMethod');
                    var $hideMethod = $('#hideMethod');
                    var toastIndex = toastCount++;
                    toastr.options = {
                        closeButton: $('#closeButton').prop('checked'),
                        debug: $('#debugInfo').prop('checked'),
                        progressBar: $('#progressBar').prop('checked'),
                        positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                        onclick: null
                    };
                    if ($('#addBehaviorOnToastClick').prop('checked')) {
                        toastr.options.onclick = function () {
                            alert('You can perform some custom action after a toast goes away');
                        };
                    }
                    if ($showDuration.val().length) {
                        toastr.options.showDuration = $showDuration.val();
                    }
                    if ($hideDuration.val().length) {
                        toastr.options.hideDuration = $hideDuration.val();
                    }
                    if ($timeOut.val().length) {
                        toastr.options.timeOut = $timeOut.val();
                    }
                    if ($extendedTimeOut.val().length) {
                        toastr.options.extendedTimeOut = $extendedTimeOut.val();
                    }
                    if ($showEasing.val().length) {
                        toastr.options.showEasing = $showEasing.val();
                    }
                    if ($hideEasing.val().length) {
                        toastr.options.hideEasing = $hideEasing.val();
                    }
                    if ($showMethod.val().length) {
                        toastr.options.showMethod = $showMethod.val();
                    }
                    if ($hideMethod.val().length) {
                        toastr.options.hideMethod = $hideMethod.val();
                    }
                    if (!msg) {
                        msg = getMessage();
                    }
                    $("#toastrOptions").text("Command: toastr["
                        + shortCutFunction
                        + "](\""
                        + msg
                        + (title ? "\", \"" + title : '')
                        + "\")\n\ntoastr.options = "
                        + JSON.stringify(toastr.options, null, 2)
                    );
                    var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
                    $toastlast = $toast;
                    if ($toast.find('#okBtn').length) {
                        $toast.delegate('#okBtn', 'click', function () {
                            alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                            $toast.remove();
                        });
                    }
                    if ($toast.find('#surpriseBtn').length) {
                        $toast.delegate('#surpriseBtn', 'click', function () {
                            alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                        });
                    }
                });
                function getLastToast() {
                    return $toastlast;
                }
                $('#clearlasttoast').click(function () {
                    toastr.clear(getLastToast());
                });
                $('#cleartoasts').click(function () {
                    toastr.clear();
                });

            });
        </script>


        @if (ViewBag.Message != null)
        {
<script type="text/javascript">
            window.onload = function () {
                  alert("@ViewBag.Message");
            };
</script>
}
    }


