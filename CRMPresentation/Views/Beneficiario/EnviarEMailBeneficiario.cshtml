@using Presentation.Extensions
@model ERP_CRM_Solution.ViewModels.MensagemViewModel
@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="page-title">
        <h3 class="title">Beneficiários</h3>
        <br />
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("CarregarBase", "BaseAdmin")">Dashboard</a>
            </li>
            <li>
                <a href="@Url.Action("MontarTelaBeneficiario", "Beneficiario")">Beneficiários</a>
            </li>
            <li>
                <a href="@Url.Action("EditarBeneficiario", "Beneficiario")">Beneficiários - Edição</a>
            </li>
            <li class="active">
                <strong>Beneficiários - Mensagens</strong>
            </li>
        </ol>
        <br />
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12">
            <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Beneficiários - E-Mail</h5>
                </div>
                @using (Html.BeginForm("EnviarEMailBeneficiario", "Beneficiario", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id="pwd-container1" }))
                {
                    <div class="ibox-content">
                        <div class="row">
                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                <div class="col-lg-4 col-md-4 col-xs-12">
                                    @Html.HiddenFor(m => m.ID)
                                    @Html.HiddenFor(m => m.MENS_DT_CRIACAO)
                                    @Html.HiddenFor(m => m.MENS_IN_TIPO)
                                    Nome do Beneficiario
                                    @Html.TextBoxFor(m => m.NOME, new { @class = "form-control", autofocus = true, @readonly="readonly" })
                                </div>
                                <div class="col-lg-3 col-md-3 col-xs-12">
                                    E-Mail
                                    @Html.TextBoxFor(m => m.MODELO, new { @class = "form-control", autofocus = true, @readonly="readonly" })
                                </div>
                                <div class="col-lg-3 col-md-3 col-xs-12">
                                    Link a Anexar
                                    @Html.TextBoxFor(m => m.MENS_NM_LINK, new { @class = "form-control", autofocus = true })
                                </div>
                            </div>
                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                <div class="col-lg-12 col-md-12 col-xs-12">
                                    Mensagem*
                                    @Html.TextAreaFor(m => m.MENS_TX_TEXTO, new { @class = "form-control  summernote", style = "width: 100%; height: 200px;", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.MENS_TX_TEXTO, "", new { @style = "color:red" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @*@Html.ButtonActionSubmit(text: "BtnSubmit", htmlAttributes: new { id = "submit", style = "display: none;" })
                            <button class="btnSubmit btn btn-sm btn-success" id="basictoast" type="button">Confirma Envio do E-Mail</button>*@
                            @Html.ButtonActionSubmit(text: "Confirma Envio de E-Mail", htmlAttributes: new { id = "basictoast" })
                            @Html.ButtonLinkIndex(text: "Voltar", action: "VoltarAnexoBeneficiario", controller: "Beneficiario")
                        </div>
                    </div>
                }
            </div>
         </div>
    </div>
</div>

@section Styles {
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />
    @*<link href="~/Content/jquery.datetimepicker.css" rel="stylesheet" />*@
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/Content/plugins/summernote/summernote.css")
    <link href="~/Content/jquery-ui-timepicker-addon.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/select2/select2.min.css" rel="stylesheet" />
    @Styles.Render("~/plugins/summernoteStyles")
    @Styles.Render("~/Content/plugins/summernote/summernote.css")
}
@section Scripts {
    @*<script src="~/Scripts/jquery.datetimepicker.full.min.js"></script>*@
    <script type="text/javascript" src="~/Scripts/moment.min.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.datetimepicker"></script>
    <script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>
    @Scripts.Render("~/plugins/toastr")
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/sparkline")
    @Scripts.Render("~/Scripts/plugins/summernote/summernote.min.js")
    <script src="~/Scripts/plugins/select2/select2.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>    
    <script src="~/Scripts/uploadAnexo.js"></script>
    @Scripts.Render("~/plugins/summernote")
    @Scripts.Render("~/Scripts/plugins/summernote/summernote.min.js")

    <script type="text/javascript">
        $(document).ready(function () {

            $('.summernote').summernote();

        });

        var edit = function () {
            $('.click2edit').summernote({ focus: true });
        };

        var save = function () {
            var aHTML = $('.click2edit').code(); //save HTML If you need(aHTML: array).
            $('.click2edit').destroy();
        };
    </script>
    <script type="text/javascript">
        $(function () {
            $("#tel").mask("(99)9999-9999");
            $("#cel").mask("(99)99999-9999");
        });
    </script>
    @Scripts.Render("~/plugins/iCheck")

    <script type="text/javascript">
        $(document).ready(function () {

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {

            var i = -1;
            var toastCount = 0;
            var $toastlast;
            var getMessage = function () {
                var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
                return msg;
            };

            $('#basictoast').click(function () {
                // Display a success toast, with a title
                toastr.success('Envio em andamento!')
            });
            $('#showtoast').click(function () {
                var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
                var msg = $('#message').val();
                var title = $('#title').val() || '';
                var $showDuration = $('#showDuration');
                var $hideDuration = $('#hideDuration');
                var $timeOut = $('#timeOut');
                var $extendedTimeOut = $('#extendedTimeOut');
                var $showEasing = $('#showEasing');
                var $hideEasing = $('#hideEasing');
                var $showMethod = $('#showMethod');
                var $hideMethod = $('#hideMethod');
                var toastIndex = toastCount++;
                toastr.options = {
                    closeButton: $('#closeButton').prop('checked'),
                    debug: $('#debugInfo').prop('checked'),
                    progressBar: $('#progressBar').prop('checked'),
                    positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                    onclick: null
                };
                if ($('#addBehaviorOnToastClick').prop('checked')) {
                    toastr.options.onclick = function () {
                        alert('You can perform some custom action after a toast goes away');
                    };
                }
                if ($showDuration.val().length) {
                    toastr.options.showDuration = $showDuration.val();
                }
                if ($hideDuration.val().length) {
                    toastr.options.hideDuration = $hideDuration.val();
                }
                if ($timeOut.val().length) {
                    toastr.options.timeOut = $timeOut.val();
                }
                if ($extendedTimeOut.val().length) {
                    toastr.options.extendedTimeOut = $extendedTimeOut.val();
                }
                if ($showEasing.val().length) {
                    toastr.options.showEasing = $showEasing.val();
                }
                if ($hideEasing.val().length) {
                    toastr.options.hideEasing = $hideEasing.val();
                }
                if ($showMethod.val().length) {
                    toastr.options.showMethod = $showMethod.val();
                }
                if ($hideMethod.val().length) {
                    toastr.options.hideMethod = $hideMethod.val();
                }
                if (!msg) {
                    msg = getMessage();
                }
                $("#toastrOptions").text("Command: toastr["
                        + shortCutFunction
                        + "](\""
                        + msg
                        + (title ? "\", \"" + title : '')
                        + "\")\n\ntoastr.options = "
                        + JSON.stringify(toastr.options, null, 2)
                );
                var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
                $toastlast = $toast;
                if ($toast.find('#okBtn').length) {
                    $toast.delegate('#okBtn', 'click', function () {
                        alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                        $toast.remove();
                    });
                }
                if ($toast.find('#surpriseBtn').length) {
                    $toast.delegate('#surpriseBtn', 'click', function () {
                        alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                    });
                }
            });
            function getLastToast() {
                return $toastlast;
            }
            $('#clearlasttoast').click(function () {
                toastr.clear(getLastToast());
            });
            $('#cleartoasts').click(function () {
                toastr.clear();
            });

        });
    </script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                  alert("@ViewBag.Message");
            };
        </script>
    }
}


