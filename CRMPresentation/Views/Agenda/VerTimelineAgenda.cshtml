@using Presentation.Extensions
@using EntitiesServices.Model;
@model EntitiesServices.Model.AGENDA
@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="page-title"> 
        <h3 class="title">Agenda</h3> 
        <br />
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("CarregarBase", "BaseAdmin")">Dashboard</a>
            </li>
            <li>
                <a href="@Url.Action("MontarTelaAgenda", "Agenda")">Agenda</a>
            </li>
            <li class="active">
                <strong>Agenda - Linha do Tempo</strong>
            </li>
        </ol>
        <br />
    </div>

    @*TABS - PRINCIPAL*@
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12">
            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">
                <div class="col-lg-12 col-md-12 col-xs-12">
                    @Html.ButtonLinkIndex(text: "Voltar", action: "VoltarTimeline", controller: "Agenda")
                </div>
            </div>
            <br />
            <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Agenda - Linha do Tempo</h5>
                </div>
                <div class="ibox-content">
                     @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <button type="button" class="close" data-dismiss="alert">Fechar</button>
                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        </div>}
                    <div class="tabs-container">
                        @using (Html.BeginForm("VerTimelineAgenda", "Agenda", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id = "pwd-container1" }))
                        {
                            <div class="tab-content">

                                @*Dados Gerais*@
                                <div class="panel-body">
                                    <div id="vertical-timeline" class="vertical-container light-timeline">
                                        @if (ViewBag.Listas != null)
                                        {
                                            if ((ViewBag.Listas as List<EntitiesServices.Model.AGENDA>).Count > 0)
                                            {
                                                foreach (AGENDA item in (ViewBag.Listas as List<EntitiesServices.Model.AGENDA>).OrderByDescending(p => p.AGEN_DT_DATA).ThenByDescending(p => p.AGEN_HR_HORA))
                                        {
                                            <div class="vertical-timeline-block">
                                                <div class="vertical-timeline-icon navy-bg">
                                                    <i class="fa fa-briefcase"></i>
                                                </div>

                                                <div class="vertical-timeline-content">
                                                    <h2 style="cursor: pointer;" onclick="window.open('../Agenda/EditarAgenda/' + @item.AGEN_CD_ID, '_self')">@item.AGEN_NM_TITULO</h2>
                                                    <p>
                                                        <br />
                                                        @item.AGEN_DS_DESCRICAO                                                        
                                                    </p>
                                                    <span class="vertical-date">
                                                        @CrossCutting.Formatters.LongDateFormatterShort(item.AGEN_DT_DATA, item.AGEN_HR_HORA.ToString()) <br />
                                                        <small>@item.AGEN_DT_DATA.ToShortDateString()  @item.AGEN_HR_HORA.ToString()</small>
                                                    </span>
                                                </div>
                                            </div>
                                        }
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
         </div>
    </div>
</div>

@section Styles {
}
@section Scripts {


    <script type="text/javascript">
        $(document).ready(function () {

            var i = -1;
            var toastCount = 0;
            var $toastlast;
            var getMessage = function () {
                var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
                return msg;
            };

            $('#basictoast').click(function () {
                // Display a success toast, with a title
                toastr.success('Processo em andamento!')
            });
            $('#showtoast').click(function () {
                var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
                var msg = $('#message').val();
                var title = $('#title').val() || '';
                var $showDuration = $('#showDuration');
                var $hideDuration = $('#hideDuration');
                var $timeOut = $('#timeOut');
                var $extendedTimeOut = $('#extendedTimeOut');
                var $showEasing = $('#showEasing');
                var $hideEasing = $('#hideEasing');
                var $showMethod = $('#showMethod');
                var $hideMethod = $('#hideMethod');
                var toastIndex = toastCount++;
                toastr.options = {
                    closeButton: $('#closeButton').prop('checked'),
                    debug: $('#debugInfo').prop('checked'),
                    progressBar: $('#progressBar').prop('checked'),
                    positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                    onclick: null
                };
                if ($('#addBehaviorOnToastClick').prop('checked')) {
                    toastr.options.onclick = function () {
                        alert('You can perform some custom action after a toast goes away');
                    };
                }
                if ($showDuration.val().length) {
                    toastr.options.showDuration = $showDuration.val();
                }
                if ($hideDuration.val().length) {
                    toastr.options.hideDuration = $hideDuration.val();
                }
                if ($timeOut.val().length) {
                    toastr.options.timeOut = $timeOut.val();
                }
                if ($extendedTimeOut.val().length) {
                    toastr.options.extendedTimeOut = $extendedTimeOut.val();
                }
                if ($showEasing.val().length) {
                    toastr.options.showEasing = $showEasing.val();
                }
                if ($hideEasing.val().length) {
                    toastr.options.hideEasing = $hideEasing.val();
                }
                if ($showMethod.val().length) {
                    toastr.options.showMethod = $showMethod.val();
                }
                if ($hideMethod.val().length) {
                    toastr.options.hideMethod = $hideMethod.val();
                }
                if (!msg) {
                    msg = getMessage();
                }
                $("#toastrOptions").text("Command: toastr["
                        + shortCutFunction
                        + "](\""
                        + msg
                        + (title ? "\", \"" + title : '')
                        + "\")\n\ntoastr.options = "
                        + JSON.stringify(toastr.options, null, 2)
                );
                var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
                $toastlast = $toast;
                if ($toast.find('#okBtn').length) {
                    $toast.delegate('#okBtn', 'click', function () {
                        alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                        $toast.remove();
                    });
                }
                if ($toast.find('#surpriseBtn').length) {
                    $toast.delegate('#surpriseBtn', 'click', function () {
                        alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                    });
                }
            });
            function getLastToast() {
                return $toastlast;
            }
            $('#clearlasttoast').click(function () {
                toastr.clear(getLastToast());
            });
            $('#cleartoasts').click(function () {
                toastr.clear();
            });

        });
    </script>


    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                  alert("@ViewBag.Message");
            };
        </script>
    }
}

